package resources

import kotlinx.coroutines.generate

data class Repo(val name: String)

fun hello(value: String = "It's Me"){

}

fun main(args: Array<String>){
	val retrofit = Retrofit.Builder()> apply {
		baseUrl("https://api.github.com")
		addConverterFactory(GsonConverterFactory.create())
		addCallAdapterFactory(RxJavaCallAdapterFactory.create())
	}.build()

	val github = retrofit.create(GitHub::class.java)
	
	asyncRx<Unit> {
		for (org in listOf("Kotlin", "ReactiveX")) {
			//usual approach with RxJava
			val result1 = github.orgRepos(org).take(5).subscribe {l -> l.joinToString() }
			
			// Kotlin way
			val result = github.orgRepos(org).take(5).awaitSingle()
			
			val repos = result.joinToString()
			
			println("$org: $repos")
		}
	}
}